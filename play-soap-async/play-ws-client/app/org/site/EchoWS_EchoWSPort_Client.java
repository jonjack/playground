
package org.site;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.4
 * 2015-05-04T19:23:56.052+01:00
 * Generated source version: 3.0.4
 * 
 */
public final class EchoWS_EchoWSPort_Client {

    private static final QName SERVICE_NAME = new QName("http://www.site.org", "EchoService");

    private EchoWS_EchoWSPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = EchoService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        EchoService ss = new EchoService(wsdlURL, SERVICE_NAME);
        EchoWS port = ss.getEchoWSPort();  
        
        
        /* Example Asynchronous Call using Polling approach */
        {
        System.out.println("Invoking echoAsync...");
        java.lang.String _echoAsync_arg0 = "";
        Response<org.site.EchoResponse> _echoAsync__return = port.echoAsync(_echoAsync_arg0);
        System.out.println("echoAsync.result=" + _echoAsync__return);
        }
        
        
        /* Example Asynchronous Call using Callback */
        {
        System.out.println("Invoking echoAsync...");
        java.lang.String _echoAsync_arg0 = "";
        AsyncHandler<org.site.EchoResponse> _echoAsync_asyncHandler = null;
        Future<?> _echoAsync__return = port.echoAsync(_echoAsync_arg0, _echoAsync_asyncHandler);
        System.out.println("echoAsync.result=" + _echoAsync__return);
        }
        
        
        /* Example Blocking Call */
        {
        System.out.println("Invoking echo...");
        java.lang.String _echo_arg0 = "";
        java.lang.String _echo__return = port.echo(_echo_arg0);
        System.out.println("echo.result=" + _echo__return);
        }

        System.exit(0);
    }

}
